// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnerCanceled extends ethereum.Event {
  get params(): OwnerCanceled__Params {
    return new OwnerCanceled__Params(this);
  }
}

export class OwnerCanceled__Params {
  _event: OwnerCanceled;

  constructor(event: OwnerCanceled) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get canceledOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerPending extends ethereum.Event {
  get params(): OwnerPending__Params {
    return new OwnerPending__Params(this);
  }
}

export class OwnerPending__Params {
  _event: OwnerPending;

  constructor(event: OwnerPending) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pendingOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerUpdated extends ethereum.Event {
  get params(): OwnerUpdated__Params {
    return new OwnerUpdated__Params(this);
  }
}

export class OwnerUpdated__Params {
  _event: OwnerUpdated;

  constructor(event: OwnerUpdated) {
    this._event = event;
  }

  get prevOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StreamCreated extends ethereum.Event {
  get params(): StreamCreated__Params {
    return new StreamCreated__Params(this);
  }
}

export class StreamCreated__Params {
  _event: StreamCreated;

  constructor(event: StreamCreated) {
    this._event = event;
  }

  get streamId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get streamType(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get impl(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Manager extends ethereum.SmartContract {
  static bind(address: Address): Manager {
    return new Manager("Manager", address);
  }

  botDAO(): Address {
    let result = super.call("botDAO", "botDAO():(address)", []);

    return result[0].toAddress();
  }

  try_botDAO(): ethereum.CallResult<Address> {
    let result = super.tryCall("botDAO", "botDAO():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  contractVersion(): string {
    let result = super.call(
      "contractVersion",
      "contractVersion():(string)",
      []
    );

    return result[0].toString();
  }

  try_contractVersion(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "contractVersion",
      "contractVersion():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  createIntvStream(
    _owner: Address,
    _startDate: BigInt,
    _endDate: BigInt,
    _interval: BigInt,
    _owed: BigInt,
    _tip: BigInt,
    _recipient: Address,
    _token: Address
  ): Address {
    let result = super.call(
      "createIntvStream",
      "createIntvStream(address,uint256,uint256,uint256,uint256,uint256,address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromUnsignedBigInt(_interval),
        ethereum.Value.fromUnsignedBigInt(_owed),
        ethereum.Value.fromUnsignedBigInt(_tip),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromAddress(_token)
      ]
    );

    return result[0].toAddress();
  }

  try_createIntvStream(
    _owner: Address,
    _startDate: BigInt,
    _endDate: BigInt,
    _interval: BigInt,
    _owed: BigInt,
    _tip: BigInt,
    _recipient: Address,
    _token: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createIntvStream",
      "createIntvStream(address,uint256,uint256,uint256,uint256,uint256,address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromUnsignedBigInt(_interval),
        ethereum.Value.fromUnsignedBigInt(_owed),
        ethereum.Value.fromUnsignedBigInt(_tip),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromAddress(_token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createMSStream(
    _owner: Address,
    _msPayments: Array<BigInt>,
    _msDates: Array<BigInt>,
    _tip: BigInt,
    _recipient: Address,
    _token: Address
  ): Address {
    let result = super.call(
      "createMSStream",
      "createMSStream(address,uint256[],uint64[],uint96,address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigIntArray(_msPayments),
        ethereum.Value.fromUnsignedBigIntArray(_msDates),
        ethereum.Value.fromUnsignedBigInt(_tip),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromAddress(_token)
      ]
    );

    return result[0].toAddress();
  }

  try_createMSStream(
    _owner: Address,
    _msPayments: Array<BigInt>,
    _msDates: Array<BigInt>,
    _tip: BigInt,
    _recipient: Address,
    _token: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createMSStream",
      "createMSStream(address,uint256[],uint64[],uint96,address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigIntArray(_msPayments),
        ethereum.Value.fromUnsignedBigIntArray(_msDates),
        ethereum.Value.fromUnsignedBigInt(_tip),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromAddress(_token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getIntvStreamAddress(
    _owner: Address,
    _startDate: BigInt,
    _endDate: BigInt,
    _interval: BigInt,
    _token: Address,
    _recipient: Address
  ): Address {
    let result = super.call(
      "getIntvStreamAddress",
      "getIntvStreamAddress(address,uint256,uint256,uint256,address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromUnsignedBigInt(_interval),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromAddress(_recipient)
      ]
    );

    return result[0].toAddress();
  }

  try_getIntvStreamAddress(
    _owner: Address,
    _startDate: BigInt,
    _endDate: BigInt,
    _interval: BigInt,
    _token: Address,
    _recipient: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getIntvStreamAddress",
      "getIntvStreamAddress(address,uint256,uint256,uint256,address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromUnsignedBigInt(_interval),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromAddress(_recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMSSStreamAddress(
    _owner: Address,
    _msDates: Array<BigInt>,
    _recipient: Address,
    _token: Address
  ): Address {
    let result = super.call(
      "getMSSStreamAddress",
      "getMSSStreamAddress(address,uint64[],address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigIntArray(_msDates),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromAddress(_token)
      ]
    );

    return result[0].toAddress();
  }

  try_getMSSStreamAddress(
    _owner: Address,
    _msDates: Array<BigInt>,
    _recipient: Address,
    _token: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getMSSStreamAddress",
      "getMSSStreamAddress(address,uint64[],address,address):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigIntArray(_msDates),
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromAddress(_token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getStreamVersion(streamImpl: Address): string {
    let result = super.call(
      "getStreamVersion",
      "getStreamVersion(address):(string)",
      [ethereum.Value.fromAddress(streamImpl)]
    );

    return result[0].toString();
  }

  try_getStreamVersion(streamImpl: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getStreamVersion",
      "getStreamVersion(address):(string)",
      [ethereum.Value.fromAddress(streamImpl)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  intvImpl(): Address {
    let result = super.call("intvImpl", "intvImpl():(address)", []);

    return result[0].toAddress();
  }

  try_intvImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("intvImpl", "intvImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  msImpl(): Address {
    let result = super.call("msImpl", "msImpl():(address)", []);

    return result[0].toAddress();
  }

  try_msImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("msImpl", "msImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _msImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _intvImpl(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _botDAO(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class BatchReleaseCall extends ethereum.Call {
  get inputs(): BatchReleaseCall__Inputs {
    return new BatchReleaseCall__Inputs(this);
  }

  get outputs(): BatchReleaseCall__Outputs {
    return new BatchReleaseCall__Outputs(this);
  }
}

export class BatchReleaseCall__Inputs {
  _call: BatchReleaseCall;

  constructor(call: BatchReleaseCall) {
    this._call = call;
  }

  get streams(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class BatchReleaseCall__Outputs {
  _call: BatchReleaseCall;

  constructor(call: BatchReleaseCall) {
    this._call = call;
  }
}

export class CancelOwnershipTransferCall extends ethereum.Call {
  get inputs(): CancelOwnershipTransferCall__Inputs {
    return new CancelOwnershipTransferCall__Inputs(this);
  }

  get outputs(): CancelOwnershipTransferCall__Outputs {
    return new CancelOwnershipTransferCall__Outputs(this);
  }
}

export class CancelOwnershipTransferCall__Inputs {
  _call: CancelOwnershipTransferCall;

  constructor(call: CancelOwnershipTransferCall) {
    this._call = call;
  }
}

export class CancelOwnershipTransferCall__Outputs {
  _call: CancelOwnershipTransferCall;

  constructor(call: CancelOwnershipTransferCall) {
    this._call = call;
  }
}

export class CreateIntvStreamCall extends ethereum.Call {
  get inputs(): CreateIntvStreamCall__Inputs {
    return new CreateIntvStreamCall__Inputs(this);
  }

  get outputs(): CreateIntvStreamCall__Outputs {
    return new CreateIntvStreamCall__Outputs(this);
  }
}

export class CreateIntvStreamCall__Inputs {
  _call: CreateIntvStreamCall;

  constructor(call: CreateIntvStreamCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _interval(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _owed(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _tip(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class CreateIntvStreamCall__Outputs {
  _call: CreateIntvStreamCall;

  constructor(call: CreateIntvStreamCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateMSStreamCall extends ethereum.Call {
  get inputs(): CreateMSStreamCall__Inputs {
    return new CreateMSStreamCall__Inputs(this);
  }

  get outputs(): CreateMSStreamCall__Outputs {
    return new CreateMSStreamCall__Outputs(this);
  }
}

export class CreateMSStreamCall__Inputs {
  _call: CreateMSStreamCall;

  constructor(call: CreateMSStreamCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _msPayments(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _msDates(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _tip(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class CreateMSStreamCall__Outputs {
  _call: CreateMSStreamCall;

  constructor(call: CreateMSStreamCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SafeTransferOwnershipCall extends ethereum.Call {
  get inputs(): SafeTransferOwnershipCall__Inputs {
    return new SafeTransferOwnershipCall__Inputs(this);
  }

  get outputs(): SafeTransferOwnershipCall__Outputs {
    return new SafeTransferOwnershipCall__Outputs(this);
  }
}

export class SafeTransferOwnershipCall__Inputs {
  _call: SafeTransferOwnershipCall;

  constructor(call: SafeTransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SafeTransferOwnershipCall__Outputs {
  _call: SafeTransferOwnershipCall;

  constructor(call: SafeTransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get _newImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get _newImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
