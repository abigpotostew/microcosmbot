/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Milestones, MilestonesInterface } from "../Milestones";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    type: "error",
  },
  {
    inputs: [],
    name: "ALREADY_INITIALIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "INCORRECT_DATE_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "INITIALIZING",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_INITIALIZING",
    type: "error",
  },
  {
    inputs: [],
    name: "NO_ETHER",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_PENDING_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_RECIPIENT",
    type: "error",
  },
  {
    inputs: [],
    name: "PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "STREAM_FINISHED",
    type: "error",
  },
  {
    inputs: [],
    name: "STREAM_HASNT_STARTED",
    type: "error",
  },
  {
    inputs: [],
    name: "TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "UNPAUSED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "streamId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "streamType",
        type: "string",
      },
    ],
    name: "FundsDisbursed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "canceledOwner",
        type: "address",
      },
    ],
    name: "OwnerCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnerPending",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "streamId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "botDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "changeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentMilestone",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint88",
        name: "index",
        type: "uint88",
      },
    ],
    name: "getMilestone",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMilestoneLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_msPayments",
        type: "uint256[]",
      },
      {
        internalType: "uint64[]",
        name: "_msDates",
        type: "uint64[]",
      },
      {
        internalType: "uint96",
        name: "_tip",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_botDAO",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "safeTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff161580158062000030575060005460ff1615155b80156200006057506200004e30620000f160201b620013de1760201c565b8062000060575060005460ff16600114155b156200007f5760405163439a74c960e01b815260040160405180910390fd5b6000805460ff191660011790558015620000a3576000805461ff0019166101001790555b8015620000ea576000805461ff0019169055604051600181527fbe9b076dc5b65990cca9dd9d7366682482e7817a6f6bc7f4faf4dc32af497f329060200160405180910390a15b50620000f7565b3b151590565b6120d680620001076000396000f3fe6080604052600436106101845760003560e01c806366d003ac116100d6578063a067674f1161007f578063e30c397811610059578063e30c397814610514578063f2fde38b1461053f578063fc0c546a1461055f57600080fd5b8063a067674f14610493578063a0a8e460146104b3578063b69ef8a8146104ff57600080fd5b806386d1a69f116100b057806386d1a69f1461042c5780638da5cb5b1461044157806392c2bcb41461047357600080fd5b806366d003ac146103d557806379ba5097146104025780638456cb591461041757600080fd5b80633901a88f116101385780633f4ba83a116101125780633f4ba83a146103825780634e71d92d146103975780635c975abb146103ac57600080fd5b80633901a88f14610325578063395db2cd1461034d5780633ccfd60b1461036d57600080fd5b8063299a017c11610169578063299a017c146102385780632d378026146102b0578063354a75d4146102d357600080fd5b80630627fa44146101e057806323452b9c1461022357600080fd5b366101db5760025473ffffffffffffffffffffffffffffffffffffffff16156101d9576040517f9f2951b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b600080fd5b3480156101ec57600080fd5b506102006101fb366004611da0565b61058c565b6040805192835267ffffffffffffffff9091166020830152015b60405180910390f35b34801561022f57600080fd5b506101d961060d565b34801561024457600080fd5b5061024d6106e1565b6040805165ffffffffffff9096168652602086019490945267ffffffffffffffff909216928401929092526bffffffffffffffffffffffff909116606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00161021a565b3480156102bc57600080fd5b506102c561080f565b60405190815260200161021a565b3480156102df57600080fd5b506003546103009073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161021a565b34801561033157600080fd5b506005546006546040805192835260208301919091520161021a565b34801561035957600080fd5b506101d9610368366004611dfd565b61081e565b34801561037957600080fd5b506101d96108f4565b34801561038e57600080fd5b506101d9610b50565b3480156103a357600080fd5b506102c5610bb2565b3480156103b857600080fd5b5060005462010000900460ff16604051901515815260200161021a565b3480156103e157600080fd5b506004546103009073ffffffffffffffffffffffffffffffffffffffff1681565b34801561040e57600080fd5b506101d9610ce2565b34801561042357600080fd5b506101d9610dee565b34801561043857600080fd5b506102c5610e4e565b34801561044d57600080fd5b506000546301000000900473ffffffffffffffffffffffffffffffffffffffff16610300565b34801561047f57600080fd5b506101d961048e366004611dfd565b610fea565b34801561049f57600080fd5b506101d96104ae366004611e64565b6110b8565b3480156104bf57600080fd5b50604080518082018252600581527f312e302e300000000000000000000000000000000000000000000000000000006020820152905161021a9190611f5c565b34801561050b57600080fd5b506102c56112c6565b34801561052057600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff16610300565b34801561054b57600080fd5b506101d961055a366004611dfd565b61137d565b34801561056b57600080fd5b506002546103009073ffffffffffffffffffffffffffffffffffffffff1681565b6000806005836affffffffffffffffffffff16815481106105af576105af611fad565b90600052602060002001546006846affffffffffffffffffffff16815481106105da576105da611fad565b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1691509150915091565b6000546301000000900473ffffffffffffffffffffffffffffffffffffffff163314610665576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff938416936301000000909204909116917f682679deecef4dcd49674845cc1e3a075fea9073680aa445a8207d5a4bdea3da91a3600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600754600654600091829182918291829165ffffffffffff161061074e57505060075460045465ffffffffffff821694506000935083925066010000000000009091046bffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff16610808565b6007546005805465ffffffffffff909216918290811061077057610770611fad565b60009182526020909120015460075460068054909165ffffffffffff1690811061079c5761079c611fad565b60009182526020909120600480830490910154600754915494995092975060039091166008026101000a90910467ffffffffffffffff169450660100000000000090046bffffffffffffffffffffffff16925073ffffffffffffffffffffffffffffffffffffffff1690505b9091929394565b60006108196113e4565b905090565b6000546301000000900473ffffffffffffffffffffffffffffffffffffffff163314610876576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff838116918217909255600080546040519293630100000090910416917f4f2638f5949b9614ef8d5e268cb51348ad7f434a34812bf64b6e95014fbd357e9190a350565b6000546301000000900473ffffffffffffffffffffffffffffffffffffffff16331461094c576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025460009073ffffffffffffffffffffffffffffffffffffffff16610a34575047600061099760005473ffffffffffffffffffffffffffffffffffffffff63010000009091041690565b73ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146109ee576040519150601f19603f3d011682016040523d82523d6000602084013e6109f3565b606091505b5050905080610a2e576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610b13565b6002546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac69190611fdc565b600254909150610b139073ffffffffffffffffffffffffffffffffffffffff16610b0d60005473ffffffffffffffffffffffffffffffffffffffff63010000009091041690565b836114b1565b60408051308152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491015b60405180910390a150565b6000546301000000900473ffffffffffffffffffffffffffffffffffffffff163314610ba8576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bb0611543565b565b6000805462010000900460ff1615610bf6576040517fa9aad58c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c006113e4565b905080600003610c1257600091505090565b6007805465ffffffffffff16906000610c2a83612024565b825465ffffffffffff9182166101009390930a928302919092021990911617905550600454610c6f9073ffffffffffffffffffffffffffffffffffffffff16826115e3565b60408051308152602081018390526060818301819052600a908201527f4d696c6573746f6e657300000000000000000000000000000000000000000000608082015290517f2ce2e253945537aa7d973276dc02985c341489198e30fa86a1ccc903e07deed09181900360a00190a1905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314610d33576040517f065cd53100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080546040513392630100000090920473ffffffffffffffffffffffffffffffffffffffff16917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a360018054600080547fffffffffffffffffff0000000000000000000000000000000000000000ffffff1673ffffffffffffffffffffffffffffffffffffffff83166301000000021790557fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000546301000000900473ffffffffffffffffffffffffffffffffffffffff163314610e46576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bb06116c3565b6000805462010000900460ff1615610e92576040517fa9aad58c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e9c6113e4565b905080600003610eae57600091505090565b600754600090610ed690660100000000000090046bffffffffffffffffffffffff1683612049565b6007805491925065ffffffffffff909116906000610ef383612024565b825465ffffffffffff9182166101009390930a928302919092021990911617905550600454610f389073ffffffffffffffffffffffffffffffffffffffff16826115e3565b600354600754610f769173ffffffffffffffffffffffffffffffffffffffff1690660100000000000090046bffffffffffffffffffffffff166115e3565b60408051308152602081018490526060818301819052600a908201527f4d696c6573746f6e657300000000000000000000000000000000000000000000608082015290517f2ce2e253945537aa7d973276dc02985c341489198e30fa86a1ccc903e07deed09181900360a00190a150905090565b60045473ffffffffffffffffffffffffffffffffffffffff16330361108357600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040805133815260208101929092527f4a9d367b1b0cd787be10021f1c55cb49c9f2302334e6df35c9621005eb2225149101610b45565b6040517fa826212800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600054610100900460ff16158015806110d5575060005460ff1615155b80156110f15750303b1515806110f1575060005460ff16600114155b15611128576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561118657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61119260058a8a611c84565b5061119f60068888611ccf565b50600780547fffffffffffffffffffffffffffff000000000000000000000000ffffffffffff1666010000000000006bffffffffffffffffffffffff881602179055600480547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff878116919091179092556002805482168684161790556003805490911691841691909117905561124d8a611763565b611257600061181d565b80156112ba57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527fbe9b076dc5b65990cca9dd9d7366682482e7817a6f6bc7f4faf4dc32af497f329060200160405180910390a15b50505050505050505050565b60025460009073ffffffffffffffffffffffffffffffffffffffff166112eb57504790565b6002546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015611359573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108199190611fdc565b6000546301000000900473ffffffffffffffffffffffffffffffffffffffff1633146113d5576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110b581611896565b3b151590565b60075460065460009165ffffffffffff161061142c576040517f0b533b9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075460068054909165ffffffffffff1690811061144c5761144c611fad565b6000918252602090912060048204015460039091166008026101000a900467ffffffffffffffff164210156114815750600090565b60075460058054909165ffffffffffff169081106114a1576114a1611fad565b9060005260206000200154905090565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261153e908490611964565b505050565b60005462010000900460ff16611585576040517f6d76f93d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff1690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b60025473ffffffffffffffffffffffffffffffffffffffff1615611629576002546116259073ffffffffffffffffffffffffffffffffffffffff1683836114b1565b5050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611683576040519150601f19603f3d011682016040523d82523d6000602084013e611688565b606091505b505090508061153e576040517f3f4ab80e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005462010000900460ff1615611706576040517fa9aad58c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff16620100001790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020016115d9565b600054610100900460ff166117a4576040517f624bb4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffff0000000000000000000000000000000000000000ffffff16630100000073ffffffffffffffffffffffffffffffffffffffff84169081029190911782556040519091907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350565b600054610100900460ff1661185e576040517f624bb4ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805491151562010000027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff909216919091179055565b6000805460405173ffffffffffffffffffffffffffffffffffffffff80851693630100000090930416917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36000805473ffffffffffffffffffffffffffffffffffffffff8084166301000000027fffffffffffffffffff0000000000000000000000000000000000000000ffffff9092169190911790915560015416156110b557600180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b60006119c6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a759092919063ffffffff16565b80519091501561153e57808060200190518101906119e49190612062565b61153e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6060611a848484600085611a8c565b949350505050565b606082471015611b1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401611a6c565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611b479190612084565b60006040518083038185875af1925050503d8060008114611b84576040519150601f19603f3d011682016040523d82523d6000602084013e611b89565b606091505b5091509150611b9a87838387611ba5565b979650505050505050565b60608315611c3b578251600003611c345773ffffffffffffffffffffffffffffffffffffffff85163b611c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611a6c565b5081611a84565b611a848383815115611c505781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6c9190611f5c565b828054828255906000526020600020908101928215611cbf579160200282015b82811115611cbf578235825591602001919060010190611ca4565b50611ccb929150611d8b565b5090565b82805482825590600052602060002090600301600490048101928215611cbf5791602002820160005b83821115611d4e57833567ffffffffffffffff1683826101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509260200192600801602081600701049283019260010302611cf8565b8015611d825782816101000a81549067ffffffffffffffff0219169055600801602081600701049283019260010302611d4e565b5050611ccb9291505b5b80821115611ccb5760008155600101611d8c565b600060208284031215611db257600080fd5b81356affffffffffffffffffffff81168114611dcd57600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611df857600080fd5b919050565b600060208284031215611e0f57600080fd5b611dcd82611dd4565b60008083601f840112611e2a57600080fd5b50813567ffffffffffffffff811115611e4257600080fd5b6020830191508360208260051b8501011115611e5d57600080fd5b9250929050565b600080600080600080600080600060e08a8c031215611e8257600080fd5b611e8b8a611dd4565b985060208a013567ffffffffffffffff80821115611ea857600080fd5b611eb48d838e01611e18565b909a50985060408c0135915080821115611ecd57600080fd5b50611eda8c828d01611e18565b90975095505060608a01356bffffffffffffffffffffffff81168114611eff57600080fd5b9350611f0d60808b01611dd4565b9250611f1b60a08b01611dd4565b9150611f2960c08b01611dd4565b90509295985092959850929598565b60005b83811015611f53578181015183820152602001611f3b565b50506000910152565b6020815260008251806020840152611f7b816040850160208701611f38565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611fee57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600065ffffffffffff80831681810361203f5761203f611ff5565b6001019392505050565b8181038181111561205c5761205c611ff5565b92915050565b60006020828403121561207457600080fd5b81518015158114611dcd57600080fd5b60008251612096818460208701611f38565b919091019291505056fea264697066735822122086f1d7eff7c76e042f89c68247e300b5318b3e77a97a3dd8384414035d539bd664736f6c63430008110033";

type MilestonesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MilestonesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Milestones__factory extends ContractFactory {
  constructor(...args: MilestonesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Milestones> {
    return super.deploy(overrides || {}) as Promise<Milestones>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Milestones {
    return super.attach(address) as Milestones;
  }
  override connect(signer: Signer): Milestones__factory {
    return super.connect(signer) as Milestones__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MilestonesInterface {
    return new utils.Interface(_abi) as MilestonesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Milestones {
    return new Contract(address, _abi, signerOrProvider) as Milestones;
  }
}
