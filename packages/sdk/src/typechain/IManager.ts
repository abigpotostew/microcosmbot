/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface IManagerInterface extends utils.Interface {
  functions: {
    "batchRelease(address[])": FunctionFragment;
    "createIntvStream(address,uint256,uint256,uint256,uint256,uint256,address,address)": FunctionFragment;
    "createMSStream(address,uint256[],uint64[],uint96,address,address)": FunctionFragment;
    "getIntvStreamAddress(address,uint256,uint256,uint256,address,address)": FunctionFragment;
    "getMSSStreamAddress(address,uint64[],address,address)": FunctionFragment;
    "getStreamVersion(address)": FunctionFragment;
    "intvImpl()": FunctionFragment;
    "msImpl()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "batchRelease"
      | "createIntvStream"
      | "createMSStream"
      | "getIntvStreamAddress"
      | "getMSSStreamAddress"
      | "getStreamVersion"
      | "intvImpl"
      | "msImpl"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "batchRelease",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "createIntvStream",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createMSStream",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getIntvStreamAddress",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getMSSStreamAddress",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getStreamVersion",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "intvImpl", values?: undefined): string;
  encodeFunctionData(functionFragment: "msImpl", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "batchRelease",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createIntvStream",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMSStream",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIntvStreamAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMSSStreamAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStreamVersion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "intvImpl", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "msImpl", data: BytesLike): Result;

  events: {
    "StreamCreated(address,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "StreamCreated"): EventFragment;
}

export interface StreamCreatedEventObject {
  streamId: string;
  streamType: string;
}
export type StreamCreatedEvent = TypedEvent<
  [string, string],
  StreamCreatedEventObject
>;

export type StreamCreatedEventFilter = TypedEventFilter<StreamCreatedEvent>;

export interface IManager extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IManagerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    batchRelease(
      streams: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createIntvStream(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _owed: PromiseOrValue<BigNumberish>,
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createMSStream(
      _owner: PromiseOrValue<string>,
      _msPayments: PromiseOrValue<BigNumberish>[],
      _msDates: PromiseOrValue<BigNumberish>[],
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getIntvStreamAddress(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _token: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getMSSStreamAddress(
      _owner: PromiseOrValue<string>,
      _msDates: PromiseOrValue<BigNumberish>[],
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getStreamVersion(
      daoStream: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    intvImpl(overrides?: CallOverrides): Promise<[string]>;

    msImpl(overrides?: CallOverrides): Promise<[string]>;
  };

  batchRelease(
    streams: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createIntvStream(
    _owner: PromiseOrValue<string>,
    _startDate: PromiseOrValue<BigNumberish>,
    _endDate: PromiseOrValue<BigNumberish>,
    _interval: PromiseOrValue<BigNumberish>,
    _owed: PromiseOrValue<BigNumberish>,
    _tip: PromiseOrValue<BigNumberish>,
    _recipient: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createMSStream(
    _owner: PromiseOrValue<string>,
    _msPayments: PromiseOrValue<BigNumberish>[],
    _msDates: PromiseOrValue<BigNumberish>[],
    _tip: PromiseOrValue<BigNumberish>,
    _recipient: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getIntvStreamAddress(
    _owner: PromiseOrValue<string>,
    _startDate: PromiseOrValue<BigNumberish>,
    _endDate: PromiseOrValue<BigNumberish>,
    _interval: PromiseOrValue<BigNumberish>,
    _token: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getMSSStreamAddress(
    _owner: PromiseOrValue<string>,
    _msDates: PromiseOrValue<BigNumberish>[],
    _recipient: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getStreamVersion(
    daoStream: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  intvImpl(overrides?: CallOverrides): Promise<string>;

  msImpl(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    batchRelease(
      streams: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    createIntvStream(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _owed: PromiseOrValue<BigNumberish>,
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    createMSStream(
      _owner: PromiseOrValue<string>,
      _msPayments: PromiseOrValue<BigNumberish>[],
      _msDates: PromiseOrValue<BigNumberish>[],
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getIntvStreamAddress(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _token: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getMSSStreamAddress(
      _owner: PromiseOrValue<string>,
      _msDates: PromiseOrValue<BigNumberish>[],
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getStreamVersion(
      daoStream: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    intvImpl(overrides?: CallOverrides): Promise<string>;

    msImpl(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "StreamCreated(address,string)"(
      streamId?: null,
      streamType?: null
    ): StreamCreatedEventFilter;
    StreamCreated(streamId?: null, streamType?: null): StreamCreatedEventFilter;
  };

  estimateGas: {
    batchRelease(
      streams: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createIntvStream(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _owed: PromiseOrValue<BigNumberish>,
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createMSStream(
      _owner: PromiseOrValue<string>,
      _msPayments: PromiseOrValue<BigNumberish>[],
      _msDates: PromiseOrValue<BigNumberish>[],
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getIntvStreamAddress(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _token: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMSSStreamAddress(
      _owner: PromiseOrValue<string>,
      _msDates: PromiseOrValue<BigNumberish>[],
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStreamVersion(
      daoStream: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    intvImpl(overrides?: CallOverrides): Promise<BigNumber>;

    msImpl(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    batchRelease(
      streams: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createIntvStream(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _owed: PromiseOrValue<BigNumberish>,
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createMSStream(
      _owner: PromiseOrValue<string>,
      _msPayments: PromiseOrValue<BigNumberish>[],
      _msDates: PromiseOrValue<BigNumberish>[],
      _tip: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getIntvStreamAddress(
      _owner: PromiseOrValue<string>,
      _startDate: PromiseOrValue<BigNumberish>,
      _endDate: PromiseOrValue<BigNumberish>,
      _interval: PromiseOrValue<BigNumberish>,
      _token: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMSSStreamAddress(
      _owner: PromiseOrValue<string>,
      _msDates: PromiseOrValue<BigNumberish>[],
      _recipient: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStreamVersion(
      daoStream: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    intvImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    msImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
